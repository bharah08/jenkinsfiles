pipeline {
    agent any
    tools{
        jdk 'java'
        nodejs 'node'
    }
    environment {
        SCANNER_HOME = tool 'sonar'
        registry = "bharath0812/youtube"
        BUILD_NUMBER='1.0'
        registryCredential = 'docker-hub'
    }

    stages {
        stage('checkout-code') {
            steps {
               git branch: 'main', url: 'https://github.com/bharah08/a-youtube-clone-app.git'
            }
        }
      stage('Sonar Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' 
                    $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=youtube \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=youtube 
                    '''
                }
            }
        }
    stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
           stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
         stage('OWASP Dependency Check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'dp-check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
         stage('docker-build'){
            steps{
                script {
                dockerImage = docker.build registry + ":$BUILD_NUMBER"
              }
            }
        }
        stage ('docker image scan by trivy'){
            steps{
                sh 'trivy image $registry:$BUILD_NUMBER'
            }
        }
                stage('docker-image push to hub'){
            steps{
script {
              docker.withRegistry( '', registryCredential ) {
                dockerImage.push("$BUILD_NUMBER")
              }
            }
            }
        }
        stage ("deploy on container"){
            steps{
                sh 'docker run -d --name you -p 3008:3000 bharath0812/youtube:3.0'
            }
        }
    }
}
