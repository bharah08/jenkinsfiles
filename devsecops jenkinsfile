pipeline{
    agent any
    tools{
        jdk 'java17'
        nodejs 'nodejs'
    }
    environment {
        SCANNER_HOME=tool 'sonar'
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Checkout from Git'){
            steps{
                git 'https://github.com/bharah08/Zomato-Clone.git'
            }
        }
        stage('Sonar Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' 
                    $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=zomoto \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=zomoto 
                    '''
                }
            }
        }
          stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage("docker-build-image"){
            steps{
                 sh "docker build -t bharath0812/nodejs:5.0 ."
            }
        }
         stage("TRIVY"){
            steps{
                sh "trivy image bharath0812/nodejs:5.0 > trivy.txt" 
            }
        }
        stage("Docker  Push"){
            steps{
                script{
                  withDockerRegistry(credentialsId: 'docker-hub') {
     sh 'docker push bharath0812/nodejs:5.0'
}
                }
            }
        }
       
        stage('Deploy to dev container'){
            steps{
                sh 'docker run -d --name zomato -p 3000:3000 bharath0812/nodejs:5.0'
            }
        }
    }
    post{
        success {
            echo 'The pipeline has successfully completed. Performing success actions...'
            emailext attachLog: true, body: 'check the build status', subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!', to: 'lingambharath45@gmail.com'
        }
        failure {
            echo 'The pipeline has failed. Performing failure actions...'
            emailext attachLog: true, body: 'check the build status', subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!', to: 'lingambharath45@gmail.com'
        }
    }
}
